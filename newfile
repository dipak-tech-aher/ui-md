import { useState } from 'react';

export const Carousel = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const itemWidth = 200; // Adjust this value according to your item width in pixels

  const items = [
    { label: 'Waiting of sign off', number: '1' },
    { label: 'No of cases routed to License MD', number: '2' },
    { label: 'Pending Approval', number: '3' },
    { label: 'New Requests', number: '4' },
    { label: 'Completed Tasks', number: '5' },
    { label: 'New Requests', number: '6' },
    { label: 'Completed Tasks', number: '7' },
    { label: 'New Requests', number: '8' },
    { label: 'Completed Tasks', number: '9' },
    { label: 'New Requests', number: '10' },
    { label: 'Completed Tasks', number: '11' },
  ];

  const visibleItems = 3;
  const totalItems = items.length;

  const moveSlide = (direction) => {
    let newIndex = currentIndex + direction;

    if (newIndex < 0) {
      newIndex = 0;
    } else if (newIndex >= totalItems - visibleItems) {
      newIndex = totalItems - visibleItems;
    }

    setCurrentIndex(newIndex);
  };

  const getVisibleItems = () => {
    return items.slice(currentIndex, currentIndex + visibleItems);
  };

  return (
    <div className="carousel" style={{ position: 'relative', width: `${visibleItems * itemWidth}px`, overflow: 'hidden' }}>
      <button className="carousel-btn prev" onClick={() => moveSlide(-1)} style={{ position: 'absolute', left: 0, zIndex: 1 }}>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="14"
          viewBox="0 0 14 14"
          fill="none"
        >
          <path
            d="M10.4331 2.19884L9.40061 1.16634L3.56727 6.99967L9.40061 12.833L10.4331 11.8005L5.63227 6.99967L10.4331 2.19884Z"
            fill="#424242"
          />
        </svg>
      </button>
      <div
        className="carousel-container"
        style={{
          display: 'flex',
          transition: 'transform 0.5s ease-in-out',
          transform: `translateX(-${currentIndex * itemWidth}px)`,
        }}
      >
        {items.map((item, index) => (
          <div
            className="carousel-item"
            key={index}
            style={{ minWidth: `${itemWidth}px` }}
          >
            <span className="label">{item.label}</span>
            <span className="number">{item.number}</span>
          </div>
        ))}
      </div>
      <button className="carousel-btn next" onClick={() => moveSlide(1)} style={{ position: 'absolute', right: 0, zIndex: 1 }}>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="14"
          viewBox="0 0 14 14"
          fill="none"
        >
          <path
            d="M3.56714 11.8012L4.59964 12.8337L10.433 7.00033L4.59964 1.16699L3.56714 2.19949L8.36797 7.00033L3.56714 11.8012Z"
            fill="#424242"
          />
        </svg>
      </button>
    </div>
  );
};





.carousel {
  display: flex;
  align-items: center;
  width: 100%;
  margin: auto;
  overflow: hidden;
  position: relative;
}

.carousel-btn {
  opacity: 0;
  width: 40px;
  height: 90%;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
}

.carousel-btn.prev {
  border-radius: 5px 0px 0px 5px;
  background: linear-gradient(90deg, #D9D9D9 0%, rgba(217, 217, 217, 0.00) 91.67%);
  left: 0;
}

.carousel-btn.next {
  right: 0;
  border-radius: 0px 5px 5px 0px;
  background: linear-gradient(290deg, #D9D9D9 0%, rgba(217, 217, 217, 0.00) 99.67%);
}

.carousel-btn:hover {
  opacity: 1;
}

.carousel-container {
  display: flex;
  transition: transform 0.5s ease-in-out;
  width: 100%;
  overflow: hidden;
}

.carousel-item {
  height: 90px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-width: 32.30%;
  padding: 10px;
  background-color: #ffffff;
  border-radius: 10px;
  margin: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  text-align: center;
}

